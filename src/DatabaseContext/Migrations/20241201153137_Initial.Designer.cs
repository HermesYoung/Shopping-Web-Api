// <auto-generated />
using System;
using DatabaseContext.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DatabaseContext.Migrations
{
    [DbContext(typeof(ShoppingWebDbContext))]
    [Migration("20241201153137_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DatabaseContext.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<int?>("Parent")
                        .HasColumnType("int")
                        .HasColumnName("parent");

                    b.HasKey("Id")
                        .HasName("category_pk");

                    b.HasIndex(new[] { "Name" }, "category_name_index");

                    b.HasIndex(new[] { "Parent" }, "category_parent_index");

                    b.ToTable("category", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("operation");

                    b.Property<int?>("StatusCode")
                        .HasColumnType("int")
                        .HasColumnName("status_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("operation_log_pk");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Date" }, "operation_log_date_index");

                    b.HasIndex(new[] { "Operation" }, "operation_log_operation_index");

                    b.ToTable("operation_log", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("serial_number");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("order_pk");

                    b.HasIndex(new[] { "SerialNumber" }, "order_serial_number_uindex")
                        .IsUnique();

                    b.ToTable("order", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.OrderContent", b =>
                {
                    b.Property<string>("OrderSn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("order_sn");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<Guid>("Product")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product");

                    b.Property<int>("Promotion")
                        .HasColumnType("int")
                        .HasColumnName("promotion");

                    b.HasIndex("OrderSn");

                    b.HasIndex("Product");

                    b.HasIndex("Promotion");

                    b.ToTable("order_content", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("product_pk");

                    b.ToTable("product", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("product_category", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.ProductPromotion", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("product_id");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("promotion_id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("product_promotion", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentJson")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("content_json");

                    b.Property<string>("DisplayContent")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("display_content");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("promotion_pk");

                    b.HasIndex(new[] { "EndDate" }, "promotion_end_date_index");

                    b.HasIndex(new[] { "StartDate" }, "promotion_start_date_index");

                    b.ToTable("promotion", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.PurchaseHistory", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime")
                        .HasColumnName("purchase_date");

                    b.HasIndex(new[] { "PurchaseDate" }, "purchase_history_purchase_date_index");

                    b.ToTable(" purchase_history", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("user_pk");

                    b.HasIndex(new[] { "Name" }, "user_pk_2")
                        .IsUnique();

                    b.ToTable("user", "shopping_web");
                });

            modelBuilder.Entity("DatabaseContext.Entities.OperationLog", b =>
                {
                    b.HasOne("DatabaseContext.Entities.User", "User")
                        .WithMany("OperationLogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("operation_log_user_id_fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DatabaseContext.Entities.OrderContent", b =>
                {
                    b.HasOne("DatabaseContext.Entities.Order", "OrderSnNavigation")
                        .WithMany()
                        .HasForeignKey("OrderSn")
                        .HasPrincipalKey("SerialNumber")
                        .IsRequired()
                        .HasConstraintName("order_content_order_serial_number_fk");

                    b.HasOne("DatabaseContext.Entities.Product", "ProductNavigation")
                        .WithMany()
                        .HasForeignKey("Product")
                        .IsRequired()
                        .HasConstraintName("order_content_product_id_fk");

                    b.HasOne("DatabaseContext.Entities.Promotion", "PromotionNavigation")
                        .WithMany()
                        .HasForeignKey("Promotion")
                        .IsRequired()
                        .HasConstraintName("order_content_promotion_id_fk");

                    b.Navigation("OrderSnNavigation");

                    b.Navigation("ProductNavigation");

                    b.Navigation("PromotionNavigation");
                });

            modelBuilder.Entity("DatabaseContext.Entities.ProductCategory", b =>
                {
                    b.HasOne("DatabaseContext.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("product_category_category_id_fk");

                    b.HasOne("DatabaseContext.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("product_category_product_id_fk");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DatabaseContext.Entities.ProductPromotion", b =>
                {
                    b.HasOne("DatabaseContext.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("product_promotion_product_id_fk");

                    b.HasOne("DatabaseContext.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("product_promotion_promotion_id_fk");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("DatabaseContext.Entities.User", b =>
                {
                    b.Navigation("OperationLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
